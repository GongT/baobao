// DO NOT EDIT THIS FILE
// @ts-ignore
/* eslint-disable */

/* re-export.ts */
	// Identifiers
	// References
	export * from "@idlebox/errors";
/* array/diff.ts */
	// Identifiers
	export type { IArrayUpdate } from "./array/diff.js";
	export { arrayDiff } from "./array/diff.js";
/* array/is-same.ts */
	// Identifiers
	export { isArraySame } from "./array/is-same.js";
/* array/normalize.ts */
	// Identifiers
	export { normalizeArray } from "./array/normalize.js";
/* array/sort-alpha.ts */
	// Identifiers
	export { sortByString } from "./array/sort-alpha.js";
/* array/unique.ts */
	// Identifiers
	export { arrayUnique } from "./array/unique.js";
	export { arrayUniqueReference } from "./array/unique.js";
	export type { IUniqueIdFactory } from "./array/unique.js";
	export { uniqueFilter } from "./array/unique.js";
/* date/consts.ts */
	// Identifiers
	export { oneSecond } from "./date/consts.js";
	export { oneMinute } from "./date/consts.js";
	export { oneHour } from "./date/consts.js";
	export { oneDay } from "./date/consts.js";
	export { oneWeek } from "./date/consts.js";
/* date/is-invalid.ts */
	// Identifiers
	export { isDateInvalid } from "./date/is-invalid.js";
/* date/sibling.ts */
	// Identifiers
	export { nextSecond } from "./date/sibling.js";
	export { nextMinute } from "./date/sibling.js";
	export { nextHour } from "./date/sibling.js";
	export { nextDay } from "./date/sibling.js";
	export { nextWeek } from "./date/sibling.js";
	export { nextMonth } from "./date/sibling.js";
	export { nextYear } from "./date/sibling.js";
/* string/pad2.ts */
	// Identifiers
	export { pad2 } from "./string/pad2.js";
/* date/to-string.ts */
	// Identifiers
	export { humanDate } from "./date/to-string.js";
/* date/unix.ts */
	// Identifiers
	export { getTimeStamp } from "./date/unix.js";
	export { fromTimeStamp } from "./date/unix.js";
/* debugging/inspect.ts */
	// Identifiers
	export { tryInspect } from "./debugging/inspect.js";
/* debugging/serializable.ts */
	// Identifiers
	export { isScalar } from "./debugging/serializable.js";
	export { SerializableKind } from "./debugging/serializable.js";
	export { isSerializable } from "./debugging/serializable.js";
	export { getTypeOf } from "./debugging/serializable.js";
	export { assertSerializable } from "./debugging/serializable.js";
/* error/stack-trace.ts */
	// Identifiers
	export type { StackTraceHolder } from "./error/stack-trace.js";
	export type { IWithStack } from "./error/stack-trace.js";
	export { createStackTraceHolder } from "./error/stack-trace.js";
/* error/get-frame.ts */
	// Identifiers
	export { getErrorFrame } from "./error/get-frame.js";
/* error/convert-unknown.ts */
	// Identifiers
	export { convertCaughtError } from "./error/convert-unknown.js";
/* platform/os.ts */
	// Identifiers
	export { hasProcess } from "./platform/os.js";
	export { hasWindow } from "./platform/os.js";
	export { hasGlobal } from "./platform/os.js";
	export { isElectron } from "./platform/os.js";
	export { isElectronSandbox } from "./platform/os.js";
	export { isElectronRenderer } from "./platform/os.js";
	export { isElectronMain } from "./platform/os.js";
	export { isWindows } from "./platform/os.js";
	export { isMacintosh } from "./platform/os.js";
	export { isLinux } from "./platform/os.js";
	export { isNative } from "./platform/os.js";
	export { isNodeJs } from "./platform/os.js";
	export { isWeb } from "./platform/os.js";
	export { is64Bit } from "./platform/os.js";
	export { sepList } from "./platform/os.js";
	export { is32Bit } from "./platform/os.js";
/* error/known.ts */
	// Identifiers
	export { KnownError } from "./error/known.js";
/* path/isAbsolute.ts */
	// Identifiers
	export { isAbsolute } from "./path/isAbsolute.js";
/* path/normalizePath.ts */
	// Identifiers
	export { PathKind } from "./path/normalizePath.js";
	export type { IPathInfo } from "./path/normalizePath.js";
	export { analyzePath } from "./path/normalizePath.js";
	export { normalizePath } from "./path/normalizePath.js";
	export { relativePath } from "./path/normalizePath.js";
/* platform/globalObject.ts */
	// Identifiers
	export { globalObject } from "./platform/globalObject.js";
	export { ensureGlobalObject } from "./platform/globalObject.js";
/* error/pretty.vscode.ts */
	// Identifiers
	export { vscEscapeValue } from "./error/pretty.vscode.js";
/* function/callback-list.async.ts */
	// Identifiers
	export type { MyAsyncCallback } from "./function/callback-list.async.js";
	export { AsyncCallbackList } from "./function/callback-list.async.js";
/* function/callback-list.delay.ts */
	// Identifiers
	export type { MyDelayCallback } from "./function/callback-list.delay.js";
	export { MemorizedOnceCallbackList } from "./function/callback-list.delay.js";
/* function/callback-list.ts */
	// Identifiers
	export type { MyCallback } from "./function/callback-list.js";
	export { CallbackList } from "./function/callback-list.js";
/* function/noop.ts */
	// Identifiers
	export { noop } from "./function/noop.js";
/* error/pretty.nodejs.ts */
	// Identifiers
	export { setErrorLogRoot } from "./error/pretty.nodejs.js";
	export type { IStructreStackLine } from "./error/pretty.nodejs.js";
	export { parseStackLine } from "./error/pretty.nodejs.js";
	export { prettyPrintError } from "./error/pretty.nodejs.js";
	export { parseStackString } from "./error/pretty.nodejs.js";
	export { prettyFormatStack } from "./error/pretty.nodejs.js";
	export { prettyFormatError } from "./error/pretty.nodejs.js";
/* lifecycle/dispose/bridges/function.ts */
	// Identifiers
	export { functionToDisposable } from "./lifecycle/dispose/bridges/function.js";
	export { disposerFunction } from "./lifecycle/dispose/bridges/function.js";
/* lifecycle/event/type.ts */
	// Identifiers
	export type { IEventEmitter } from "./lifecycle/event/type.js";
	export type { EventHandler } from "./lifecycle/event/type.js";
	export type { EventRegister } from "./lifecycle/event/type.js";
	export type { EventEmitterMap } from "./lifecycle/event/type.js";
/* lifecycle/event/event.ts */
	// Identifiers
	export { Emitter } from "./lifecycle/event/event.js";
/* lifecycle/dispose/bridges/native.ts */
	// Identifiers
	export { fromNativeDisposable } from "./lifecycle/dispose/bridges/native.js";
	export { toNativeDisposable } from "./lifecycle/dispose/bridges/native.js";
/* lifecycle/dispose/disposable.ts */
	// Identifiers
	export { DuplicateDisposeAction } from "./lifecycle/dispose/disposable.js";
	export type { IDisposableEvents } from "./lifecycle/dispose/disposable.js";
	export type { IDisposable } from "./lifecycle/dispose/disposable.js";
	export type { IAsyncDisposable } from "./lifecycle/dispose/disposable.js";
/* lifecycle/dispose/debug.ts */
	// Identifiers
/* lifecycle/dispose/disposedError.ts */
	// Identifiers
	export { Disposed } from "./lifecycle/dispose/disposedError.js";
	export { DuplicateDisposed } from "./lifecycle/dispose/disposedError.js";
/* lifecycle/dispose/disposableEvent.ts */
	// Identifiers
	export { addAnyKindOfListener } from "./lifecycle/dispose/disposableEvent.js";
	export type { IShorthandEmitterObject } from "./lifecycle/dispose/disposableEvent.js";
	export type { IEventEmitterObject } from "./lifecycle/dispose/disposableEvent.js";
	export { addDisposableEventListener } from "./lifecycle/dispose/disposableEvent.js";
/* platform/globalSingleton.ts */
	// Identifiers
	export { globalSingletonStrong } from "./platform/globalSingleton.js";
	export { globalSingletonDelete } from "./platform/globalSingleton.js";
	export { globalSingleton } from "./platform/globalSingleton.js";
/* platform/globalSymbol.ts */
	// Identifiers
	export { createSymbol } from "./platform/globalSymbol.js";
	export { deleteSymbol } from "./platform/globalSymbol.js";
/* lifecycle/dispose/bridges/streams.ts */
	// Identifiers
	export { closableToDisposable } from "./lifecycle/dispose/bridges/streams.js";
	export { endableToDisposable } from "./lifecycle/dispose/bridges/streams.js";
/* lifecycle/event/memorized.ts */
	// Identifiers
	export { MemorizedEmitter } from "./lifecycle/event/memorized.js";
/* lifecycle/dispose/sync-disposable.ts */
	// Identifiers
	export { DisposableOnce } from "./lifecycle/dispose/sync-disposable.js";
	export { EnhancedDisposable } from "./lifecycle/dispose/sync-disposable.js";
/* log/logger.ts */
	// Identifiers
	export { ColorKind } from "./log/logger.js";
	export type { WrappedConsoleOptions } from "./log/logger.js";
	export { WrappedConsole } from "./log/logger.js";
/* misc/assertNotNull.ts */
	// Identifiers
	export { assertNotNull } from "./misc/assertNotNull.js";
	export { throwNull } from "./misc/assertNotNull.js";
/* misc/package.json.ts */
	// Identifiers
	export type { IExportCondition } from "./misc/package.json.js";
	export type { IExportMap } from "./misc/package.json.js";
	export type { IFullExportsField } from "./misc/package.json.js";
	export type { IExportsField } from "./misc/package.json.js";
	export type { IImportsField } from "./misc/package.json.js";
	export { parseExportsField } from "./misc/package.json.js";
	export { resolveExportPath } from "./misc/package.json.js";
	export type { IPackageJson } from "./misc/package.json.js";
	export type { IPackageJsonNpmDist } from "./misc/package.json.js";
/* object/definePublicConstant.ts */
	// Identifiers
	export { definePublicConstant } from "./object/definePublicConstant.js";
	export { definePrivateConstant } from "./object/definePublicConstant.js";
/* object/initOnRead.ts */
	// Identifiers
	export type { InitFunc } from "./object/initOnRead.js";
	export { initOnRead } from "./object/initOnRead.js";
/* object/objectPath.ts */
	// Identifiers
	export { objectPath } from "./object/objectPath.js";
	export { ObjectPath } from "./object/objectPath.js";
/* object/objectSame.ts */
	// Identifiers
	export { isObjectSame } from "./object/objectSame.js";
	export { isObjectSameRecursive } from "./object/objectSame.js";
/* string/case-cast.ts */
	// Identifiers
	export { camelCase } from "./string/case-cast.js";
	export { ucfirst } from "./string/case-cast.js";
	export { lcfirst } from "./string/case-cast.js";
	export { linux_case } from "./string/case-cast.js";
	export { linux_case_hyphen } from "./string/case-cast.js";
/* path/pathArray.ts */
	// Identifiers
	export { PathArrayWindows } from "./path/pathArray.js";
	export { PathArrayPosix } from "./path/pathArray.js";
	export { PathArray } from "./path/pathArray.js";
/* path/pathCalc.ts */
	// Identifiers
	export { isPathContains } from "./path/pathCalc.js";
/* platform/compile.ts */
	// Identifiers
	export { isProductionMode } from "./platform/compile.js";
/* schedule/scheduler.ts */
	// Identifiers
	export { scheduler } from "./schedule/scheduler.js";
/* promise/deferred-promise.ts */
	// Identifiers
	export type { ValueCallback } from "./promise/deferred-promise.js";
	export type { ProgressCallback } from "./promise/deferred-promise.js";
	export type { IProgressHolder } from "./promise/deferred-promise.js";
	export { DeferredPromise } from "./promise/deferred-promise.js";
/* promise/promise-list.ts */
	// Identifiers
	export { PromiseCollection } from "./promise/promise-list.js";
/* reflection/classes/singleton.ts */
	// Identifiers
	export { singletonSymbol } from "./reflection/classes/singleton.js";
	export { SingletonType } from "./reflection/classes/singleton.js";
	export { singleton } from "./reflection/classes/singleton.js";
	export { createSingleton } from "./reflection/classes/singleton.js";
/* reflection/methods/bind.ts */
	// Identifiers
	export { bindThis } from "./reflection/methods/bind.js";
/* schedule/local-type.ts */
	// Identifiers
	export type { TimeoutType } from "./schedule/local-type.js";
	export type { IntervalType } from "./schedule/local-type.js";
/* schedule/extendable-timer.ts */
	// Identifiers
	export { ExtendableTimer } from "./schedule/extendable-timer.js";
/* schedule/interval.ts */
	// Identifiers
	export { interval } from "./schedule/interval.js";
	export { Interval } from "./schedule/interval.js";
/* schedule/timeout.ts */
	// Identifiers
	export { timeout } from "./schedule/timeout.js";
	export { sleep } from "./schedule/timeout.js";
	export { raceTimeout } from "./schedule/timeout.js";
/* string/concatType.generated.ts */
	// Identifiers
	export { concatStringType } from "./string/concatType.generated.js";
/* map-and-set/custom-set.ts */
	// Identifiers
	export type { Finder } from "./map-and-set/custom-set.js";
	export { CustomSet } from "./map-and-set/custom-set.js";
/* map-and-set/required-map.ts */
	// Identifiers
	export { RequiredMap } from "./map-and-set/required-map.js";
	export { InstanceMap } from "./map-and-set/required-map.js";
/* lifecycle/dispose/async-disposable.ts */
	// Identifiers
	export { EnhancedAsyncDisposable } from "./lifecycle/dispose/async-disposable.js";
	export { UnorderedAsyncDisposable } from "./lifecycle/dispose/async-disposable.js";
/* lifecycle/global/global-lifecycle.ts */
	// Identifiers
	export { registerGlobalLifecycle } from "./lifecycle/global/global-lifecycle.js";
	export { ensureDisposeGlobal } from "./lifecycle/global/global-lifecycle.js";
	export { disposeGlobal } from "./lifecycle/global/global-lifecycle.js";
/* legacy/rename.ts */
	// Identifiers
	export { toDisposable } from "./legacy/rename.js";
	export { AsyncDisposable } from "./legacy/rename.js";
	export { Disposable } from "./legacy/rename.js";
	export { convertCatchedError } from "./legacy/rename.js";
/* reflection/methods/memorize.ts */
	// Identifiers
	export { memo } from "./reflection/methods/memorize.js";
	export { forgetMemorized } from "./reflection/methods/memorize.js";
/* promise/await-iterator.ts */
	// Identifiers
	export { awaitIterator } from "./promise/await-iterator.js";
/* lifecycle/cancellation/driver.browser.ts */
	// Identifiers
/* lifecycle/cancellation/driver.common.ts */
	// Identifiers
/* lifecycle/cancellation/source.ts */
	// Identifiers
	export type { CancellationToken } from "./lifecycle/cancellation/source.js";
	export { CancellationTokenSource } from "./lifecycle/cancellation/source.js";
/* promise/promise-bool.ts */
	// Identifiers
	export { promiseBool } from "./promise/promise-bool.js";
/* state/simple-state-machine.ts */
	// Identifiers
	export type { IFsmRuleMap } from "./state/simple-state-machine.js";
	export type { IStateChangeEvent } from "./state/simple-state-machine.js";
	export { SimpleStateMachine } from "./state/simple-state-machine.js";
/* string/escape-regexp.ts */
	// Identifiers
	export { escapeRegExp } from "./string/escape-regexp.js";
/* string/human-bytes.ts */
	// Identifiers
	export { humanSizeSI } from "./string/human-bytes.js";
	export { humanSize } from "./string/human-bytes.js";
	export { humanSpeed } from "./string/human-bytes.js";
/* typing-helper/callback.ts */
	// Identifiers
	export type { ICommonCallback } from "./typing-helper/callback.js";
/* typing-helper/literal.ts */
	// Identifiers
	export type { Primitive } from "./typing-helper/literal.js";
/* typing-helper/deep.partial.ts */
	// Identifiers
	export type { DeepPartial } from "./typing-helper/deep.partial.js";
/* typing-helper/deep.readonly.ts */
	// Identifiers
	export type { DeepReadonly } from "./typing-helper/deep.readonly.js";
/* typing-helper/deep.required.ts */
	// Identifiers
	export type { DeepNonNullable } from "./typing-helper/deep.required.js";
/* typing-helper/deep.writable.ts */
	// Identifiers
	export type { DeepWriteable } from "./typing-helper/deep.writable.js";
/* reflection/classes/pointer.ts */
	// Identifiers
	export type { Ref } from "./reflection/classes/pointer.js";
	export { Pointer } from "./reflection/classes/pointer.js";
/* debugging/object-with-name.ts */
	// Identifiers
	export type { NamedObject } from "./debugging/object-with-name.js";
	export { objectName } from "./debugging/object-with-name.js";
	export { nameObject } from "./debugging/object-with-name.js";
	export type { MaybeNamed } from "./debugging/object-with-name.js";
	export { assertObjectHasName } from "./debugging/object-with-name.js";
	export type { NamedFunction } from "./debugging/object-with-name.js";
	export type { MaybeNamedFunction } from "./debugging/object-with-name.js";
	export { functionName } from "./debugging/object-with-name.js";
	export { nameFunction } from "./debugging/object-with-name.js";
	export { assertFunctionHasName } from "./debugging/object-with-name.js";