// DO NOT EDIT THIS FILE
// @ts-ignore
/* eslint-disable */

/* array/arrayDiff.ts */
	// Identifiers
	export type { IArrayUpdate } from "./array/arrayDiff.js";
	export { arrayDiff } from "./array/arrayDiff.js";
/* array/arraySame.ts */
	// Identifiers
	export { isArraySame } from "./array/arraySame.js";
/* array/arrayUnique.ts */
	// Identifiers
	export { arrayUnique } from "./array/arrayUnique.js";
	export { arrayUniqueReference } from "./array/arrayUnique.js";
	export type { IUniqueIdFactory } from "./array/arrayUnique.js";
	export { uniqueFilter } from "./array/arrayUnique.js";
/* array/normalizeArray.ts */
	// Identifiers
	export { normalizeArray } from "./array/normalizeArray.js";
/* array/sortAlpha.ts */
	// Identifiers
	export { sortByString } from "./array/sortAlpha.js";
/* date/consts.ts */
	// Identifiers
	export { oneSecond } from "./date/consts.js";
	export { oneMinute } from "./date/consts.js";
	export { oneHour } from "./date/consts.js";
	export { oneDay } from "./date/consts.js";
	export { oneWeek } from "./date/consts.js";
/* date/isInvalid.ts */
	// Identifiers
	export { isDateInvalid } from "./date/isInvalid.js";
/* date/sibling.ts */
	// Identifiers
	export { nextSecond } from "./date/sibling.js";
	export { nextMinute } from "./date/sibling.js";
	export { nextHour } from "./date/sibling.js";
	export { nextDay } from "./date/sibling.js";
	export { nextWeek } from "./date/sibling.js";
	export { nextMonth } from "./date/sibling.js";
	export { nextYear } from "./date/sibling.js";
/* string/pad2.ts */
	// Identifiers
	export { pad2 } from "./string/pad2.js";
/* date/timeString.ts */
	// Identifiers
	export { humanDate } from "./date/timeString.js";
/* date/unix.ts */
	// Identifiers
	export { getTimeStamp } from "./date/unix.js";
	export { fromTimeStamp } from "./date/unix.js";
/* debugging/serializable.ts */
	// Identifiers
	export { isScalar } from "./debugging/serializable.js";
	export { SerializableKind } from "./debugging/serializable.js";
	export { isSerializable } from "./debugging/serializable.js";
	export { getTypeOf } from "./debugging/serializable.js";
	export { assertSerializable } from "./debugging/serializable.js";
/* debugging/tryInspect.ts */
	// Identifiers
	export { tryInspect } from "./debugging/tryInspect.js";
/* error/getFrame.ts */
	// Identifiers
	export { getErrorFrame } from "./error/getFrame.js";
/* error/convertUnknown.ts */
	// Identifiers
	export { convertCatchedError } from "./error/convertUnknown.js";
/* platform/os.ts */
	// Identifiers
	export { hasProcess } from "./platform/os.js";
	export { hasWindow } from "./platform/os.js";
	export { hasGlobal } from "./platform/os.js";
	export { isElectron } from "./platform/os.js";
	export { isElectronSandbox } from "./platform/os.js";
	export { isElectronRenderer } from "./platform/os.js";
	export { isElectronMain } from "./platform/os.js";
	export { isWindows } from "./platform/os.js";
	export { isMacintosh } from "./platform/os.js";
	export { isLinux } from "./platform/os.js";
	export { isNative } from "./platform/os.js";
	export { isWeb } from "./platform/os.js";
	export { is64Bit } from "./platform/os.js";
	export { sepList } from "./platform/os.js";
	export { is32Bit } from "./platform/os.js";
/* error/known.ts */
	// Identifiers
	export { KnownError } from "./error/known.js";
/* path/isAbsolute.ts */
	// Identifiers
	export { isAbsolute } from "./path/isAbsolute.js";
/* path/normalizePath.ts */
	// Identifiers
	export { PathKind } from "./path/normalizePath.js";
	export type { IPathInfo } from "./path/normalizePath.js";
	export { analyzePath } from "./path/normalizePath.js";
	export { normalizePath } from "./path/normalizePath.js";
	export { relativePath } from "./path/normalizePath.js";
/* platform/globalObject.ts */
	// Identifiers
	export { globalObject } from "./platform/globalObject.js";
	export { ensureGlobalObject } from "./platform/globalObject.js";
	export { x } from "./platform/globalObject.js";
/* error/pretty.vscode.ts */
	// Identifiers
	export { vscEscapeValue } from "./error/pretty.vscode.js";
/* error/pretty.ts */
	// Identifiers
	export { setErrorLogRoot } from "./error/pretty.js";
	export type { IStructreStackLine } from "./error/pretty.js";
	export { parseStackLine } from "./error/pretty.js";
	export { prettyPrintError } from "./error/pretty.js";
	export { parseStackString } from "./error/pretty.js";
	export { prettyFormatStack } from "./error/pretty.js";
	export { prettyFormatError } from "./error/pretty.js";
/* function/functionName.ts */
	// Identifiers
	export type { NamedFunction } from "./function/functionName.js";
	export { functionName } from "./function/functionName.js";
	export { nameFunction } from "./function/functionName.js";
	export type { MaybeNamedFunction } from "./function/functionName.js";
	export { assertFunctionHasName } from "./function/functionName.js";
/* function/asyncCallbackList.ts */
	// Identifiers
	export type { MyAsyncCallback } from "./function/asyncCallbackList.js";
	export { AsyncCallbackList } from "./function/asyncCallbackList.js";
/* function/callbackList.ts */
	// Identifiers
	export type { MyCallback } from "./function/callbackList.js";
	export { CallbackList } from "./function/callbackList.js";
/* function/delayCallbackList.ts */
	// Identifiers
	export type { MyDelayCallback } from "./function/delayCallbackList.js";
	export { DelayCallbackList } from "./function/delayCallbackList.js";
/* lifecycle/event/event.ts */
	// Identifiers
	export type { EventHandler } from "./lifecycle/event/event.js";
	export type { EventRegister } from "./lifecycle/event/event.js";
	export { Emitter } from "./lifecycle/event/event.js";
/* lifecycle/dispose/lifecycle.ts */
	// Identifiers
	export type { IDisposableEvents } from "./lifecycle/dispose/lifecycle.js";
	export type { IDisposable } from "./lifecycle/dispose/lifecycle.js";
	export type { IAsyncDisposable } from "./lifecycle/dispose/lifecycle.js";
	export { toDisposable } from "./lifecycle/dispose/lifecycle.js";
/* lifecycle/dispose/debug.ts */
	// Identifiers
/* lifecycle/dispose/disposableEvent.ts */
	// Identifiers
	export type { IEventListenerOptions } from "./lifecycle/dispose/disposableEvent.js";
	export type { IEventHostObject } from "./lifecycle/dispose/disposableEvent.js";
	export type { IEventEmitterObject } from "./lifecycle/dispose/disposableEvent.js";
	export { addDisposableEventListener } from "./lifecycle/dispose/disposableEvent.js";
/* lifecycle/dispose/disposedError.ts */
	// Identifiers
	export { DisposedError } from "./lifecycle/dispose/disposedError.js";
	export { isDisposedError } from "./lifecycle/dispose/disposedError.js";
/* lifecycle/dispose/lifecycle.async.ts */
	// Identifiers
	export { AsyncDisposable } from "./lifecycle/dispose/lifecycle.async.js";
/* platform/globalSingleton.ts */
	// Identifiers
	export { globalSingletonStrong } from "./platform/globalSingleton.js";
	export { globalSingletonDelete } from "./platform/globalSingleton.js";
	export { globalSingleton } from "./platform/globalSingleton.js";
/* platform/globalSymbol.ts */
	// Identifiers
	export { createSymbol } from "./platform/globalSymbol.js";
	export { deleteSymbol } from "./platform/globalSymbol.js";
/* lifecycle/dispose/lifecycle.global.ts */
	// Identifiers
	export { registerGlobalLifecycle } from "./lifecycle/dispose/lifecycle.global.js";
	export { ensureDisposeGlobal } from "./lifecycle/dispose/lifecycle.global.js";
	export { disposeGlobal } from "./lifecycle/dispose/lifecycle.global.js";
	export { LifecycleObject } from "./lifecycle/dispose/lifecycle.global.js";
/* lifecycle/dispose/lifecycle.sync.ts */
	// Identifiers
	export { DisposableOnce } from "./lifecycle/dispose/lifecycle.sync.js";
	export { Disposable } from "./lifecycle/dispose/lifecycle.sync.js";
/* lifecycle/dispose/bridges/rxjs.ts */
	// Identifiers
	export { unsubscribableToDisposable } from "./lifecycle/dispose/bridges/rxjs.js";
/* lifecycle/event/memorized.ts */
	// Identifiers
	export { MemorizedEmitter } from "./lifecycle/event/memorized.js";
/* lifecycle/promise/cancel.ts */
	// Identifiers
	export { CanceledError } from "./lifecycle/promise/cancel.js";
	export { isCanceledError } from "./lifecycle/promise/cancel.js";
/* lifecycle/promise/deferredPromise.ts */
	// Identifiers
	export type { ValueCallback } from "./lifecycle/promise/deferredPromise.js";
	export type { ProgressCallback } from "./lifecycle/promise/deferredPromise.js";
	export type { IProgressHolder } from "./lifecycle/promise/deferredPromise.js";
	export { DeferredPromise } from "./lifecycle/promise/deferredPromise.js";
/* lifecycle/promise/cancellationToken/driver.common.ts */
	// Identifiers
/* lifecycle/promise/cancellationToken/source.ts */
	// Identifiers
	export type { CancellationToken } from "./lifecycle/promise/cancellationToken/source.js";
	export { CancellationTokenSource } from "./lifecycle/promise/cancellationToken/source.js";
/* lifecycle/promise/cancellationToken/driver.browser.ts */
	// Identifiers
/* lifecycle/timeout/timeoutError.ts */
	// Identifiers
	export { TimeoutError } from "./lifecycle/timeout/timeoutError.js";
	export { isTimeoutError } from "./lifecycle/timeout/timeoutError.js";
/* lifecycle/timeout/timeout.ts */
	// Identifiers
	export { timeout } from "./lifecycle/timeout/timeout.js";
	export { sleep } from "./lifecycle/timeout/timeout.js";
	export { timeoutPromise } from "./lifecycle/timeout/timeout.js";
/* log/logger.ts */
	// Identifiers
	export { ColorKind } from "./log/logger.js";
	export type { WrappedConsoleOptions } from "./log/logger.js";
	export { WrappedConsole } from "./log/logger.js";
/* mapSet/customSet.ts */
	// Identifiers
	export type { Finder } from "./mapSet/customSet.js";
	export { RegexpFinder } from "./mapSet/customSet.js";
	export { CustomSet } from "./mapSet/customSet.js";
/* mapSet/extendMap.ts */
	// Identifiers
	export type { MapLike } from "./mapSet/extendMap.js";
	export { ExtendMap } from "./mapSet/extendMap.js";
/* misc/assertNotNull.ts */
	// Identifiers
	export { assertNotNull } from "./misc/assertNotNull.js";
	export { throwNull } from "./misc/assertNotNull.js";
/* misc/package.json.ts */
	// Identifiers
	export type { IExportCondition } from "./misc/package.json.js";
	export type { IExportMap } from "./misc/package.json.js";
	export type { IFullExportsField } from "./misc/package.json.js";
	export type { IExportsField } from "./misc/package.json.js";
	export { parseExportsField } from "./misc/package.json.js";
	export { resolveExportPath } from "./misc/package.json.js";
	export type { IPackageJson } from "./misc/package.json.js";
	export type { IPackageJsonNpmDist } from "./misc/package.json.js";
/* object/definePublicConstant.ts */
	// Identifiers
	export { definePublicConstant } from "./object/definePublicConstant.js";
	export { definePrivateConstant } from "./object/definePublicConstant.js";
/* object/initOnRead.ts */
	// Identifiers
	export type { InitFunc } from "./object/initOnRead.js";
	export { initOnRead } from "./object/initOnRead.js";
/* object/objectPath.ts */
	// Identifiers
	export { objectPath } from "./object/objectPath.js";
/* object/objectSame.ts */
	// Identifiers
	export { isObjectSame } from "./object/objectSame.js";
	export { isObjectSameRecursive } from "./object/objectSame.js";
/* string/castCase.ts */
	// Identifiers
	export { camelCase } from "./string/castCase.js";
	export { ucfirst } from "./string/castCase.js";
	export { lcfirst } from "./string/castCase.js";
	export { linux_case } from "./string/castCase.js";
	export { linux_case_hyphen } from "./string/castCase.js";
/* path/pathArray.ts */
	// Identifiers
	export { PathArrayWindows } from "./path/pathArray.js";
	export { PathArrayPosix } from "./path/pathArray.js";
	export { PathArray } from "./path/pathArray.js";
/* promise/awaitIterator.ts */
	// Identifiers
	export { awaitIterator } from "./promise/awaitIterator.js";
/* promise/finishAllPromise.ts */
	// Identifiers
	export type { PromiseResultArray } from "./promise/finishAllPromise.js";
	export { finishAllPromise } from "./promise/finishAllPromise.js";
/* promise/promiseBool.ts */
	// Identifiers
	export { promiseBool } from "./promise/promiseBool.js";
/* promise/promiseCollection.ts */
	// Identifiers
	export { PromiseCollection } from "./promise/promiseCollection.js";
/* promise/timeoutPromiseCollection.ts */
	// Identifiers
	export { TimeoutPromiseCollection } from "./promise/timeoutPromiseCollection.js";
/* reflection/classes/hookClass.ts */
	// Identifiers
	export { hookClassSymbol } from "./reflection/classes/hookClass.js";
	export { hookClass } from "./reflection/classes/hookClass.js";
/* reflection/classes/singleton.ts */
	// Identifiers
	export { singletonSymbol } from "./reflection/classes/singleton.js";
	export { SingletonType } from "./reflection/classes/singleton.js";
	export { singleton } from "./reflection/classes/singleton.js";
/* reflection/methods/bind.ts */
	// Identifiers
	export { bindThis } from "./reflection/methods/bind.js";
/* reflection/methods/initOnRead.ts */
	// Identifiers
	export { init } from "./reflection/methods/initOnRead.js";
/* reflection/methods/memorize.ts */
	// Identifiers
	export { memorizeValueSymbol } from "./reflection/methods/memorize.js";
	export { memo } from "./reflection/methods/memorize.js";
/* state/StateMachine.ts */
	// Identifiers
	export type { IFsmRuleMap } from "./state/StateMachine.js";
	export type { IStateChangeEvent } from "./state/StateMachine.js";
	export { SimpleStateMachine } from "./state/StateMachine.js";
/* string/concatType.generated.ts */
	// Identifiers
	export { concatStringType } from "./string/concatType.generated.js";
/* string/escapeRegexp.ts */
	// Identifiers
	export { escapeRegExp } from "./string/escapeRegexp.js";
/* string/sizeString.ts */
	// Identifiers
	export { humanSizeSI } from "./string/sizeString.js";
	export { humanSize } from "./string/sizeString.js";
	export { humanSpeed } from "./string/sizeString.js";
/* typingHelper/literal.ts */
	// Identifiers
	export type { Primitive } from "./typingHelper/literal.js";
/* typingHelper/deep.partial.ts */
	// Identifiers
	export type { DeepPartial } from "./typingHelper/deep.partial.js";
/* typingHelper/deep.readonly.ts */
	// Identifiers
	export type { DeepReadonly } from "./typingHelper/deep.readonly.js";
/* typingHelper/deep.required.ts */
	// Identifiers
	export type { DeepNonNullable } from "./typingHelper/deep.required.js";
/* typingHelper/deep.writable.ts */
	// Identifiers
	export type { DeepWriteable } from "./typingHelper/deep.writable.js";